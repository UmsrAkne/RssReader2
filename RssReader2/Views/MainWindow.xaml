<Window
    x:Class="RssReader2.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:RssReader2.Views.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:RssReader2.Models"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewModels="clr-namespace:RssReader2.ViewModels"
    xmlns:views="clr-namespace:RssReader2.Views"
    Title="{Binding TitleBarText.Title}"
    Width="1024"
    Height="350"
    d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <Grid IsEnabled="{Binding UiEnabled}">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2">

            <Menu>
                <MenuItem Header="File" />
                <MenuItem Header="View">
                    <MenuItem Command="{Binding ShowWebSiteAdditionPageCommand}" Header="ウェブサイトを追加する" />
                    <MenuItem Command="{Binding ShowWebSiteEditPageCommand}" Header="ウェブサイトを編集する" />
                    <MenuItem Command="{Binding ShowGroupAdditionPageCommand}" Header="グループを追加する" />
                    <MenuItem Command="{Binding ShowNgWordAdditionPageCommand}" Header="NGワードを追加する" />
                    <MenuItem
                        Command="{Binding FeedListViewModel.ReloadUnReadFeedsCommand}"
                        Header="未読のフィードのみ表示する"
                        IsCheckable="True"
                        IsChecked="{Binding FeedListViewModel.ShowUnreadOnly}" />
                </MenuItem>
            </Menu>

            <StatusBar>
                <Button
                    Margin="3"
                    Padding="8,3"
                    Command="{Binding GetAllSiteRssFeedsCommandAsync}"
                    Content="Update (All)"
                    Template="{StaticResource ButtonCustomTemplate}" />

                <Button
                    Margin="3"
                    Padding="8,3"
                    Command="{Binding GetRssFeedsCommandAsync}"
                    Content="Update"
                    Template="{StaticResource ButtonCustomTemplate}" />
            </StatusBar>

        </StackPanel>

        <TreeView
            Grid.Row="1"
            Grid.RowSpan="4"
            Grid.Column="0"
            ItemsSource="{Binding TreeViewVm.WebSiteTreeViewItems}">
            <i:Interaction.Behaviors>
                <views:TreeViewSelectedItemBehavior />
            </i:Interaction.Behaviors>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <TextBlock
                        Margin="2,0"
                        Padding="4,0"
                        FontSize="{StaticResource BasicFontSize}"
                        Text="{Binding Name}" />
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

        <ListView
            x:Name="FeedListView"
            Grid.Row="1"
            Grid.Column="1"
            HorizontalContentAlignment="Stretch"
            AlternationCount="2"
            ItemsSource="{Binding FeedListViewModel.Feeds, NotifyOnTargetUpdated=True}"
            SelectedItem="{Binding FeedListViewModel.SelectedItem}">

            <i:Interaction.Behaviors>
                <views:ResetScrollOnItemsSourceChangedBehavior />
                <behaviors:ListViewKeyDownBehavior />
            </i:Interaction.Behaviors>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding FeedListViewModel.UpdateIsReadPropertyCommand}" CommandParameter="{Binding ElementName=FeedListView, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type models:Feed}">
                    <ContentControl>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=DataContext.FeedListViewModel.OpenUrlCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border
                                Grid.Column="0"
                                Margin="0,1"
                                Padding="5,0"
                                BorderThickness="5,0,0,0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsRead}" Value="True">
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding IsRead}" Value="False">
                                                <Setter Property="BorderBrush" Value="Orange" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <TextBlock>
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ContainsNgWord}" Value="True">
                                                    <Setter Property="Text" Value="" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding ContainsNgWord}" Value="False">
                                                    <Setter Property="Text" Value="{Binding Title}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                            </Border>

                            <TextBlock Grid.Column="1" Text="{Binding PublishedAt, Converter={StaticResource DateTimeConverter}}" />
                        </Grid>
                    </ContentControl>
                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#EEEEEE" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <ContentControl Grid.Row="3" Grid.Column="1">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FeedListViewModel.ShowUnreadOnly}" Value="False">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <StackPanel
                                        Margin="0,3"
                                        HorizontalAlignment="Center"
                                        Orientation="Horizontal">

                                        <Button
                                            Padding="10,0"
                                            Command="{Binding FeedListViewModel.PrevPageCommand}"
                                            Content="＜-"
                                            IsEnabled="{Binding FeedListViewModel.HasPrevPage}"
                                            Template="{StaticResource ButtonCustomTemplate}" />

                                        <TextBlock Margin="10,0" Text="{Binding FeedListViewModel.PageNumber}" />
                                        <TextBlock Margin="2,0" Text="/" />
                                        <TextBlock Margin="10,0" Text="{Binding FeedListViewModel.TotalPageNumber}" />

                                        <Button
                                            Padding="10,0"
                                            Command="{Binding FeedListViewModel.NextPageCommand}"
                                            Content="-＞"
                                            IsEnabled="{Binding FeedListViewModel.HasNextPage}"
                                            Template="{StaticResource ButtonCustomTemplate}" />
                                    </StackPanel>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FeedListViewModel.ShowUnreadOnly}" Value="True">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Button
                                        Width="120"
                                        Margin="0,3"
                                        Command="{Binding FeedListViewModel.ReloadUnReadFeedsCommand}"
                                        Content="Reload"
                                        Template="{StaticResource ButtonCustomTemplate}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <Border
            Grid.Row="4"
            Grid.Column="1"
            BorderBrush="Gray"
            BorderThickness="1">

            <TextBlock
                MinHeight="40"
                MaxHeight="200"
                Margin="3">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FeedListViewModel.SelectedItem.ContainsNgWord}" Value="True">
                                <Setter Property="Text" Value="" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding FeedListViewModel.SelectedItem.ContainsNgWord}" Value="False">
                                <Setter Property="Text" Value="{Binding FeedListViewModel.SelectedItem.Description}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Border>
    </Grid>
</Window>