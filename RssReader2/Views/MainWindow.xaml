<Window
    x:Class="RssReader2.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:RssReader2.Views.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:RssReader2.Models"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewModels="clr-namespace:RssReader2.ViewModels"
    xmlns:views="clr-namespace:RssReader2.Views"
    Title="{Binding TitleBarText.Title}"
    Width="1024"
    Height="768"
    d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
    d:DesignHeight="400"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding StartupUpdateAsyncCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.InputBindings>
        <KeyBinding
            Key="N"
            Command="{Binding ShowWebSiteAdditionPageCommand}"
            Modifiers="Control" />

        <KeyBinding
            Key="N"
            Command="{Binding ShowGroupAdditionPageCommand}"
            Modifiers="Control+Shift" />

        <KeyBinding
            Key="OemComma"
            Command="{Binding ShowSettingPageCommand}"
            Modifiers="Control" />

        <KeyBinding
            Key="R"
            Command="{Binding GetAllSiteRssFeedsCommandAsync}"
            Modifiers="Control" />

        <KeyBinding
            Key="L"
            Command="{Binding FeedListViewModel.SkipToOldestUnreadCommand}"
            Modifiers="Shift" />

    </Window.InputBindings>
    <Grid IsEnabled="{Binding UiEnabled}">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <!--  メニューバーと、更新ボタン、ページングボタンのエリア  -->
        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3">

            <Menu>
                <MenuItem Header="View">
                    <MenuItem Command="{Binding ShowWebSiteAdditionPageCommand}" Header="ウェブサイトを追加する (Ctrl + N)" />
                    <MenuItem Command="{Binding ShowWebSiteEditPageCommand}" Header="ウェブサイトを編集する" />
                    <MenuItem Command="{Binding ShowWebSitesManagementPageCommand}" Header="ウェブサイトを管理する" />
                    <MenuItem Command="{Binding ShowGroupAdditionPageCommand}" Header="グループを追加する (Ctrl + Shift + N)" />
                    <MenuItem Command="{Binding ShowNgWordAdditionPageCommand}" Header="NGワードを追加する" />
                    <MenuItem
                        Command="{Binding FeedListViewModel.ReloadUnReadFeedsCommand}"
                        Header="未読のフィードのみ表示する"
                        IsCheckable="True"
                        IsChecked="{Binding FeedListViewModel.ShowUnreadOnly}" />
                    <MenuItem Command="{Binding ShowSettingPageCommand}" Header="設定画面を開く (Ctrl + ,)" />
                </MenuItem>

                <MenuItem Header="Feeds">
                    <MenuItem Command="{Binding FeedListViewModel.MarkNgWordFeedsAsReadCommand}" Header="NGワードを含む未読を既読にする" />
                    <MenuItem Command="{Binding FeedListViewModel.MarkAllFeedsAsReadCommand}" Header="選択中のウェブサイトのフィードを既読にする" />
                </MenuItem>

                <MenuItem Header="Function">
                    <MenuItem
                        Header="自動更新"
                        IsCheckable="True"
                        IsChecked="{Binding AutoUpdate}" />
                </MenuItem>

            </Menu>

            <StatusBar>
                <Button
                    Margin="3"
                    Padding="8,3"
                    Command="{Binding GetAllSiteRssFeedsCommandAsync}"
                    Content="Update (All)"
                    Template="{StaticResource ButtonCustomTemplate}" />

                <Button
                    Margin="3"
                    Padding="8,3"
                    Command="{Binding GetRssFeedsCommandAsync}"
                    Content="Update"
                    Template="{StaticResource ButtonCustomTemplate}" />

                <ContentControl Margin="10,0">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FeedListViewModel.ShowUnreadOnly}" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel
                                                Margin="0,3"
                                                HorizontalAlignment="Center"
                                                Orientation="Horizontal">

                                                <Button
                                                    Padding="10,3"
                                                    Command="{Binding FeedListViewModel.PrevPageCommand}"
                                                    Content="＜-"
                                                    IsEnabled="{Binding FeedListViewModel.HasPrevPage}"
                                                    Template="{StaticResource ButtonCustomTemplate}" />

                                                <TextBlock
                                                    Margin="10,0"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding FeedListViewModel.PageNumber}" />
                                                <TextBlock
                                                    Margin="2,0"
                                                    VerticalAlignment="Center"
                                                    Text="/" />
                                                <TextBlock
                                                    Margin="10,0"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding FeedListViewModel.TotalPageNumber}" />

                                                <Button
                                                    Padding="10,3"
                                                    Command="{Binding FeedListViewModel.NextPageCommand}"
                                                    Content="-＞"
                                                    IsEnabled="{Binding FeedListViewModel.HasNextPage}"
                                                    Template="{StaticResource ButtonCustomTemplate}" />

                                                <Button
                                                    Margin="15,0"
                                                    Padding="10,3"
                                                    Command="{Binding FeedListViewModel.SkipToOldestUnreadCommand}"
                                                    Content="-＞＞"
                                                    IsEnabled="{Binding FeedListViewModel.HasNextPage}"
                                                    Template="{StaticResource ButtonCustomTemplate}" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FeedListViewModel.ShowUnreadOnly}" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Button
                                                Width="120"
                                                Margin="0,3"
                                                Command="{Binding FeedListViewModel.ReloadUnReadFeedsCommand}"
                                                Content="Reload"
                                                Template="{StaticResource ButtonCustomTemplate}" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

            </StatusBar>

        </StackPanel>

        <!--  ウェブサイトリストツリービュー  -->
        <TreeView
            Grid.Row="1"
            Grid.RowSpan="4"
            Grid.Column="0"
            ItemsSource="{Binding TreeViewVm.WebSiteTreeViewItems}">
            <i:Interaction.Behaviors>
                <views:TreeViewSelectedItemBehavior />
            </i:Interaction.Behaviors>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <Border Margin="2" CornerRadius="4">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsGroup}" Value="False">
                                        <Setter Property="BorderBrush" Value="LightSteelBlue" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsGroup}" Value="True">
                                        <Setter Property="BorderBrush" Value="RoyalBlue" />
                                        <Setter Property="BorderThickness" Value="2" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <StackPanel Orientation="Horizontal">

                            <TextBlock
                                Margin="2,0"
                                Padding="4,0"
                                FontSize="{StaticResource BasicFontSize}"
                                Text="{Binding Name}" />

                            <TextBlock
                                Margin="2,0"
                                FontSize="{StaticResource BasicFontSize}"
                                Foreground="OrangeRed"
                                Text="(up)">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasUnreadItem}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding HasUnreadItem}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

        <!--  フィードリスト横の更新ボタン  -->
        <Button
            Grid.Row="1"
            Grid.RowSpan="4"
            Grid.Column="1"
            Width="30"
            Margin="4,0"
            Template="{StaticResource ButtonCustomTemplate}">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FeedListViewModel.ShowUnreadOnly}" Value="False">
                            <Setter Property="Command" Value="{Binding FeedListViewModel.PrevPageCommand}" />
                            <Setter Property="Content">
                                <Setter.Value>
                                    <TextBlock FontSize="22" Text="⇐" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FeedListViewModel.ShowUnreadOnly}" Value="True">
                            <Setter Property="Command" Value="{Binding FeedListViewModel.ReloadUnReadFeedsCommand}" />
                            <Setter Property="Content">
                                <Setter.Value>
                                    <TextBlock FontSize="22" Text="↺" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FeedListViewModel.ShowUnreadOnly}" Value="False" />
                                <Condition Binding="{Binding FeedListViewModel.PageNumber}" Value="1" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Opacity" Value="0.3" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--  フィードリスト上部の機能ボタンエリア  -->
        <StackPanel
            Grid.Row="1"
            Grid.Column="2"
            Margin="5"
            Orientation="Horizontal">
            <ToggleButton
                Padding="8,0"
                Command="{Binding FeedListViewModel.ReloadUnReadFeedsCommand}"
                Content="未読フィードのみ表示する"
                IsChecked="{Binding FeedListViewModel.ShowUnreadOnly}"
                Template="{StaticResource ToggleButtonControlTemplate}" />

            <ToggleButton
                Margin="10,0"
                Padding="8,0"
                Content="自動更新"
                IsChecked="{Binding AutoUpdate}"
                Template="{StaticResource ToggleButtonControlTemplate}" />
        </StackPanel>

        <!--  フィードリスト  -->
        <ListView
            x:Name="FeedListView"
            Grid.Row="2"
            Grid.Column="2"
            HorizontalContentAlignment="Stretch"
            AlternationCount="2"
            ItemsSource="{Binding FeedListViewModel.Feeds, NotifyOnTargetUpdated=True}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            SelectedItem="{Binding FeedListViewModel.SelectedItem}">

            <i:Interaction.Behaviors>
                <views:ResetScrollOnItemsSourceChangedBehavior />
                <behaviors:ListViewKeyDownBehavior />
            </i:Interaction.Behaviors>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding FeedListViewModel.UpdateIsReadPropertyCommand}" CommandParameter="{Binding ElementName=FeedListView, Path=SelectedItem}" />
                    <i:InvokeCommandAction Command="{Binding TreeViewVm.UpdateUnreadFeedDisplayCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type models:Feed}">
                    <ContentControl>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=DataContext.FeedListViewModel.OpenUrlCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Width="40">
                                <TextBlock Text="{Binding LineNumber, Converter={StaticResource ZeroPaddingConverter}, ConverterParameter=D4}">
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRead}" Value="False">
                                                    <Setter Property="Foreground" Value="Orange" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsRead}" Value="True">
                                                    <Setter Property="Foreground" Value="Black" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Border>

                            <Border
                                Grid.Column="1"
                                Margin="0,1"
                                Padding="5,0"
                                BorderThickness="5,0,0,0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsRead}" Value="True">
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding IsRead}" Value="False">
                                                <Setter Property="BorderBrush" Value="Orange" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock
                                        Margin="0,0,4,0"
                                        VerticalAlignment="Center"
                                        Text="★">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMarked}" Value="True">
                                                        <Setter Property="Opacity" Value="1.0" />
                                                        <Setter Property="Foreground" Value="Coral" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding IsMarked}" Value="False">
                                                        <Setter Property="Opacity" Value="0.1" />
                                                        <Setter Property="Foreground" Value="Black" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <TextBlock>
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ContainsNgWord}" Value="True">
                                                        <Setter Property="Text" Value="" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding ContainsNgWord}" Value="False">
                                                        <Setter Property="Text" Value="{Binding Title}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>

                            </Border>

                            <TextBlock Grid.Column="2" Text="{Binding PublishedAt, Converter={StaticResource DateTimeConverter}}" />
                        </Grid>
                    </ContentControl>
                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#EEEEEE" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <!--  選択中のフィードの詳細テキストを表示するエリア  -->
        <Border
            Grid.Row="4"
            Grid.Column="2"
            BorderBrush="Gray"
            BorderThickness="1">

            <ScrollViewer VerticalScrollBarVisibility="Visible">
                <TextBlock
                    Height="80"
                    Margin="3"
                    TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FeedListViewModel.SelectedItem.ContainsNgWord}" Value="True">
                                    <Setter Property="Text" Value="" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding FeedListViewModel.SelectedItem.ContainsNgWord}" Value="False">
                                    <Setter Property="Text" Value="{Binding FeedListViewModel.SelectedItem.Description, Converter={StaticResource RemoveEmptyLinesConverter}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </ScrollViewer>
        </Border>

        <!--  ログを表示するエリア  -->
        <ScrollViewer
            Grid.Row="5"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            VerticalScrollBarVisibility="Visible">
            <TextBlock Padding="3" Text="{Binding Logger.Message}" />
        </ScrollViewer>
    </Grid>
</Window>